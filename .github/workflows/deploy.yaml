name: Deploy Services to ECR and EKS

on:
  workflow_dispatch:
  push:
    branches: [master]

env:
  AWS_REGION: eu-central-1
  ECR_REPOSITORY: nearby
  EKS_CLUSTER_NAME: nearby

jobs:
  deploy-service:
    name: Deploy Services
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service:
          - users
          - posts
          - notifications
          - mailer
          - gateway

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ steps.commit.outputs.short }}
        run: |
          docker build ./server/ -t $ECR_REGISTRY/$ECR_REPOSITORY-${{ matrix.service }}:latest -f ./server/${{ matrix.service }}/Dockerfile .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY-${{ matrix.service }}:latest

      - name: Update kube config
        run: aws eks update-kubeconfig --name $EKS_CLUSTER_NAME --region $AWS_REGION

      - name: Deploy to EKS
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ steps.commit.outputs.short }}
        run: |
          sed -i.bak "s|DOCKER_IMAGE|$ECR_REGISTRY/$ECR_REPOSITORY:${{ matrix.service }}-$IMAGE_TAG|g" manifests/${{ matrix.service }}-app-deployment.yaml && \
          kubectl apply -f manifests/${{ matrix.service }}-app-deployment.yaml
          kubectl apply -f manifests/${{ matrix.service }}-app-service.yaml